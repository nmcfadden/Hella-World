#EDITED by Neil
# Macro file for the initialization phase of "Legend.cc"
# when runing in interactive mode
#
# Sets some default verbose
#
/run/verbose 1 
/control/verbose 0
#/exp/setShieldingStyle GERDA
/exp/setFillGas ArgonLiquid
/exp/update


#
# Create a scene handler/viewer for a specific graphics system
#    The compound command "/vis/open <vis-driver-name>"
#    is equivalent to the following set of commands:
#
#    /vis/sceneHandler/create
#    /vis/viewer/create
#
# Create a scene handler and a viewer for the OGLIX driver
/vis/open OGL 600x600-0+0
#
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
#Set direction from target to camera.
/vis/viewer/set/viewpointVector 1 1.5 1.1
/vis/viewer/set/viewpointThetaPhi 80 90 deg
/vis/viewer/zoom 63.2736
#    The compound command "/vis/drawVolume"
#    is equivalent to the following set of commands:
#
#    /vis/scene/create
#    /vis/scene/add/volume
#    /vis/sceneHandler/attach
# Create an empty scene and add the detector geometry to it
/vis/drawVolume
#
# Store particle trajectories for visualization
# (if too many tracks cause core dump => storeTrajectory 0)
/tracking/storeTrajectory 1
#
# Add trajectories to the current scene
# Note: This command is not necessary since the C++ method DrawTrajectory()
#       is called in LegendEventAction::EndOfEventAction
/vis/scene/add/trajectories
#
# Requests viewer to accumulate hits, tracks, etc. at end of event. 
# detector remains or is redrawn.
/run/initialize
/Legend/saveThreshold 10000000
/Legend/pmtThreshold 2
/Legend/eventVerbose 1
#/Legend/forceDrawPhotons true #do not need, done in LegendTrackingAction.cc
/vis/ogl/set/displayListLimit 10000
/run/beamOn 1
/vis/scene/endOfEventAction accumulate 10
